package com.mycompany.user.services.impl;

import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mycompany.user.entities.User;
import com.mycompany.user.exceptions.ResourceNotFoundException;
import com.mycompany.user.repositories.UserRepository;
import com.mycompany.user.services.UserService;

@Service
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserRepository userRepository;

	@Override
	public User saveUser(User user) {
		String randomUserId = UUID.randomUUID().toString();
		user.setUserId(randomUserId);
		return userRepository.save(user);
	}

	@Override
	public List<User> getAllUser() {		
		return userRepository.findAll();
	}

	@Override
	public User getUser(String userId) {
		return userRepository.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User not found with id: " + userId));
	}

	@Override
	public User updateUser(String userId, User updatedUser) {
		User existingUser = userRepository.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User not found with id: " + userId));

		// Update the properties of existingUser with values from updatedUser
		existingUser.setUserName(updatedUser.getUserName());
		existingUser.setAddress(updatedUser.getAddress());
		existingUser.setEmail(updatedUser.getEmail());
		existingUser.setAbout(updatedUser.getAbout());

		return userRepository.save(existingUser);
	}

	@Override
	public void deleteUser(String userId) {
		User userToDelete = userRepository.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User not found with id: " + userId));

		userRepository.delete(userToDelete);
	}
}
